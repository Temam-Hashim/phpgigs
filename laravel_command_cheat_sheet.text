=>Laravel artisan commands
a. about                  Display basic information about your application
b. clear-compiled         Remove the compiled class file
c. completion             Dump the shell completion script
d. db                     Start a new database CLI session
e. docs                   Access the Laravel documentation
f. down                   Put the application into maintenance / demo mode
g. env                    Display the current framework environment
h. help                   Display help for a command
i. inspire                Display an inspiring quote
j. list                   List commands
k. migrate                Run the database migrations
l. optimize               Cache the framework bootstrap files
m. serve                  Serve the application on the PHP development server
n. test                   Run the application tests
o. tinker                 Interact with your application
p. up                     Bring the application out of maintenance mode
========================================================================
1. Run 
    -> php artisan serve
2. create modal
    -> php artisan make:model modelName
3. create table
    -> php artisan 
4. DB
    -> db:monitor             Monitor the number of connections on the specified database
    -> db:seed                Seed the database with records
    -> db:show                Display information about the given database
    -> db:table               Display information about the given database table
    -> db:wipe                Drop all tables, views, and types

5. MAKE
  -> make:cast              Create a new custom Eloquent cast class
  -> make:channel           Create a new channel class
  -> make:command           Create a new Artisan command
  -> make:component         Create a new view component class
  -> make:controller        Create a new controller class
  -> make:event             Create a new event class
  -> make:exception         Create a new custom exception class
  -> make:factory           Create a new model factory
  -> make:job               Create a new job class
  -> make:listener          Create a new event listener class
  -> make:mail              Create a new email class
  -> make:middleware        Create a new middleware class
  -> make:migration         Create a new migration file
  -> make:model             Create a new Eloquent model class
  -> make:notification      Create a new notification class
  -> make:observer          Create a new observer class
  -> make:policy            Create a new policy class
  -> make:provider          Create a new service provider class
  -> make:request           Create a new form request class
  -> make:resource          Create a new resource
  -> make:rule              Create a new validation rule
  -> make:scope             Create a new scope class
  -> make:seeder            Create a new seeder class
  -> make:test              Create a new test class

6. MIGRATE 
    -> migrate:fresh          Drop all tables and re-run all migrations
    -> migrate:install        Create the migration repository
    -> migrate:refresh        Reset and re-run all migrations
    -> migrate:reset          Rollback all database migrations
    -> migrate:rollback       Rollback the last database migration
    -> migrate:status         Show the status of each migration
7.  queue
    -> queue:batches-table    Create a migration for the batches database table
    -> queue:clear            Delete all of the jobs from the specified queue
    -> queue:failed           List all of the failed queue jobs
    -> queue:failed-table     Create a migration for the failed queue jobs database table
    -> queue:flush            Flush all of the failed queue jobs
    -> queue:forget           Delete a failed queue job
    -> queue:listen           Listen to a given queue
    -> queue:monitor          Monitor the size of the specified queues
    -> queue:prune-batches    Prune stale entries from the batches database
    -> queue:prune-failed     Prune stale entries from the failed jobs table
    -> queue:restart          Restart queue worker daemons after their current job
    -> queue:retry            Retry a failed queue job
    -> queue:retry-batch      Retry the failed jobs for a batch
    -> queue:table            Create a migration for the queue jobs database table
    -> queue:work             Start processing jobs on the queue as a daemon
8.  route
    -> route:cache            Create a route cache file for faster route registration
    -> route:clear            Remove the route cache file
    -> route:list             List all registered routes
9.  sail
    -> sail:add               Add a service to an existing Sail installation
    -> sail:install           Install Laravel Sail's default Docker Compose file
    -> sail:publish           Publish the Laravel Sail Docker files
10.  schedule
    -> schedule:clear-cache   Delete the cached mutex files created by scheduler
    -> schedule:list          List all scheduled tasks
    -> schedule:run           Run the scheduled commands
    -> schedule:test          Run a scheduled command
    -> schedule:work          Start the schedule worker

11. add data to table
    -> php artisan migrate:refresh
12. clear info about your app
    -> php artisan about
13. Remove the compiled class file
    -> php artisan clear-compiled
14. Dump the shell completion script
    ->php artisan completion
15. Start a new database CLI session
    ->php artisan db
16. Access the Laravel documentation
    ->php artisan docs
17. Put the application into maintenance / demo mode
    -> php artisan down
18. Display the current framework environment
    -> php artisan env
19. Help
    -> php artisan help
20. display an inspiring quote
    -> php artisan inspire
21. List
    -> php artisan list
 22. schema
    -> schema:dump            Dump the given database schema
 23. session
    -> session:table          Create a migration for the session database table
 24. storage
    -> storage:link           Create the symbolic links configured for the application
 25. stub
    -> stub:publish           Publish all stubs that are available for customization
 26. vendor
    -> vendor:publish         Publish any publishable assets from vendor packages
 27. view
    -> view:cache             Compile all of the application's Blade templates
    -> view:clear             Clear all compiled view files
 28. sanctum
    -> sanctum:prune-expired  Prune tokens expired for more than specified number of hours
 29.  notifications
    -> notifications:table    Create a migration for the notifications table
 30. optimize
    -> optimize:clear         Remove the cached bootstrap files
 31. package
    -> package:discover       Rebuild the cached package manifest
32.  model
    -> model:prune            Prune models that are no longer needed
    -> model:show             Show information about an Eloquent model
33.  env
    -> env:decrypt            Decrypt an environment file
    -> env:encrypt            Encrypt an environment file
34. event
    -> event:cache            Discover and cache the application's events and listeners
    -> event:clear            Clear all cached events and listeners
    -> event:generate         Generate the missing events and listeners based on registration
    -> event:list             List the application's events and listeners
35. auth
    -> auth:clear-resets      Flush expired password reset tokens
36. cache
    -> cache:clear            Flush the application cache
    -> cache:forget           Remove an item from the cache
    -> cache:table            Create a migration for the cache database table
 37. config
  -> config:cache           Create a cache file for faster configuration loading
  -> config:clear           Remove the configuration cache file

